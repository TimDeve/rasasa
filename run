#!/usr/bin/env bash
cd "$(dirname "$0")" || exit
source scripts/runner.sh

task_default() {
  runner_colorize blue "Available tasks:"
  runner_get_defined_tasks
}

task_server:build() {
  cd server || return
  cargo build --release
}

task_server:watch() {
  runner_parallel server:watch:check server:watch:run
}

task_server:watch:check() {
  cd server || return
  touch .watchtrigger
  cargo watch -x check -s 'touch .watchtrigger'
}

task_server:watch:run() {
  cd server || return
  cargo watch --no-gitignore -w .watchtrigger -x run
}

task_client:build() {
  cd client || return
  npm run build
}

task_build() {
  runner_parallel server:build client:build
}

task_dist() {
  runner_sequence dist:clean build
  mkdir dist
  cp Caddyfile dist

  mkdir dist/public
  cp client/dist/* dist/public

  cp server/target/release/rasasa-server dist

  mkdir dist/read-server
  cp read-server/package.json dist/read-server
  cp read-server/package-lock.json dist/read-server
  cp -r read-server/src dist/read-server 
}

task_dist:clean() {
 rm -rf dist
}

